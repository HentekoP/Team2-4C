<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_v_r_m_blend_shape_key_test_8cs" kind="file">
    <compoundname>VRMBlendShapeKeyTest.cs</compoundname>
    <innerclass refid="class_v_r_m_1_1_v_r_m_blend_shape_key_test" prot="public">VRM::VRMBlendShapeKeyTest</innerclass>
    <innernamespace refid="namespace_v_r_m">VRM</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>NUnit.Framework;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections.Generic;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Reflection;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">VRM</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9" refid="class_v_r_m_1_1_v_r_m_blend_shape_key_test" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_v_r_m_1_1_v_r_m_blend_shape_key_test" kindref="compound">VRMBlendShapeKeyTest</ref></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11" refid="class_v_r_m_1_1_v_r_m_blend_shape_key_test_1ae7482ab7c5b408bc299496f17e3ffb01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_v_r_m_1_1_blend_shape_key" kindref="compound">BlendShapeKey</ref><sp/><ref refid="class_v_r_m_1_1_v_r_m_blend_shape_key_test_1ae7482ab7c5b408bc299496f17e3ffb01" kindref="member">CreateBlendShapeKey</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>name,<sp/><ref refid="namespace_v_r_m_1af293ffdf9d384b4a20f5d6451372b02d" kindref="member">BlendShapePreset</ref><sp/>preset)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>argTypes<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Type[]<sp/>{typeof(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">),<sp/>typeof(<ref refid="namespace_v_r_m_1af293ffdf9d384b4a20f5d6451372b02d" kindref="member">BlendShapePreset</ref>)};</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>private<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>constructor<sp/>=<sp/>typeof(<ref refid="struct_v_r_m_1_1_blend_shape_key" kindref="compound">BlendShapeKey</ref>).GetConstructor(</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BindingFlags.Instance<sp/>|<sp/>BindingFlags.NonPublic,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>null,<sp/>argTypes,<sp/>null);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct_v_r_m_1_1_blend_shape_key" kindref="compound">BlendShapeKey</ref>)<sp/>constructor.Invoke(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">[]<sp/>{name,<sp/>preset});</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[Test]</highlight></codeline>
<codeline lineno="22" refid="class_v_r_m_1_1_v_r_m_blend_shape_key_test_1a290218b1eefebd3f6fce7122dfe6de3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_v_r_m_1_1_v_r_m_blend_shape_key_test_1a290218b1eefebd3f6fce7122dfe6de3d" kindref="member">KeyTest</ref>()</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>key<sp/>=<sp/>BlendShapeKey.CreateFromPreset(BlendShapePreset.Blink);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(key,<sp/>BlendShapeKey.CreateFromPreset(BlendShapePreset.Blink));</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(key,<sp/><ref refid="class_v_r_m_1_1_v_r_m_blend_shape_key_test_1ae7482ab7c5b408bc299496f17e3ffb01" kindref="member">CreateBlendShapeKey</ref>(</highlight><highlight class="stringliteral">&quot;Blink&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespace_v_r_m_1af293ffdf9d384b4a20f5d6451372b02d" kindref="member">BlendShapePreset</ref>.Blink));</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(key,<sp/><ref refid="class_v_r_m_1_1_v_r_m_blend_shape_key_test_1ae7482ab7c5b408bc299496f17e3ffb01" kindref="member">CreateBlendShapeKey</ref>(</highlight><highlight class="stringliteral">&quot;xxx&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespace_v_r_m_1af293ffdf9d384b4a20f5d6451372b02d" kindref="member">BlendShapePreset</ref>.Blink));</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(key.Name,<sp/></highlight><highlight class="stringliteral">&quot;Blink&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>dict<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Dictionary&lt;BlendShapeKey,<sp/>float&gt;();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict[key]<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.IsTrue(dict.ContainsKey(<ref refid="class_v_r_m_1_1_v_r_m_blend_shape_key_test_1ae7482ab7c5b408bc299496f17e3ffb01" kindref="member">CreateBlendShapeKey</ref>(</highlight><highlight class="stringliteral">&quot;Blink&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespace_v_r_m_1af293ffdf9d384b4a20f5d6451372b02d" kindref="member">BlendShapePreset</ref>.Blink)));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.IsTrue(dict.ContainsKey(BlendShapeKey.CreateFromPreset(BlendShapePreset.Blink)));</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.IsTrue(dict.ContainsKey(<ref refid="class_v_r_m_1_1_v_r_m_blend_shape_key_test_1ae7482ab7c5b408bc299496f17e3ffb01" kindref="member">CreateBlendShapeKey</ref>(</highlight><highlight class="stringliteral">&quot;xxx&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespace_v_r_m_1af293ffdf9d384b4a20f5d6451372b02d" kindref="member">BlendShapePreset</ref>.Blink)));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict.Clear();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>key2<sp/>=<sp/>BlendShapeKey.CreateUnknown(</highlight><highlight class="stringliteral">&quot;Blink&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Name:<sp/>Blink,<sp/>Preset:<sp/>Unknown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict[key2]<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(key2,<sp/><ref refid="class_v_r_m_1_1_v_r_m_blend_shape_key_test_1ae7482ab7c5b408bc299496f17e3ffb01" kindref="member">CreateBlendShapeKey</ref>(</highlight><highlight class="stringliteral">&quot;Blink&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespace_v_r_m_1af293ffdf9d384b4a20f5d6451372b02d" kindref="member">BlendShapePreset</ref>.Unknown));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreNotEqual(key2,<sp/>BlendShapeKey.CreateUnknown(</highlight><highlight class="stringliteral">&quot;blink&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreNotEqual(key2,<sp/><ref refid="class_v_r_m_1_1_v_r_m_blend_shape_key_test_1ae7482ab7c5b408bc299496f17e3ffb01" kindref="member">CreateBlendShapeKey</ref>(</highlight><highlight class="stringliteral">&quot;Blink&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespace_v_r_m_1af293ffdf9d384b4a20f5d6451372b02d" kindref="member">BlendShapePreset</ref>.Blink));</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreNotEqual(key2,<sp/>BlendShapeKey.CreateFromPreset(BlendShapePreset.Blink));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(key2.Name,<sp/></highlight><highlight class="stringliteral">&quot;Blink&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.IsFalse(dict.ContainsKey(BlendShapeKey.CreateUnknown(</highlight><highlight class="stringliteral">&quot;blink&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.IsFalse(dict.ContainsKey(<ref refid="class_v_r_m_1_1_v_r_m_blend_shape_key_test_1ae7482ab7c5b408bc299496f17e3ffb01" kindref="member">CreateBlendShapeKey</ref>(</highlight><highlight class="stringliteral">&quot;Blink&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespace_v_r_m_1af293ffdf9d384b4a20f5d6451372b02d" kindref="member">BlendShapePreset</ref>.Blink)));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.IsFalse(dict.ContainsKey(BlendShapeKey.CreateFromPreset(BlendShapePreset.Blink)));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>key3<sp/>=<sp/><ref refid="class_v_r_m_1_1_v_r_m_blend_shape_key_test_1ae7482ab7c5b408bc299496f17e3ffb01" kindref="member">CreateBlendShapeKey</ref>(</highlight><highlight class="stringliteral">&quot;xxx&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespace_v_r_m_1af293ffdf9d384b4a20f5d6451372b02d" kindref="member">BlendShapePreset</ref>.Blink);<sp/></highlight><highlight class="comment">//<sp/>Unknown<sp/>以外は独自の名前を持てない</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(key3,<sp/>BlendShapeKey.CreateFromPreset(BlendShapePreset.Blink));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreNotEqual(key3,<sp/><ref refid="class_v_r_m_1_1_v_r_m_blend_shape_key_test_1ae7482ab7c5b408bc299496f17e3ffb01" kindref="member">CreateBlendShapeKey</ref>(</highlight><highlight class="stringliteral">&quot;xxx&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespace_v_r_m_1af293ffdf9d384b4a20f5d6451372b02d" kindref="member">BlendShapePreset</ref>.Unknown));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(key3.Name,<sp/></highlight><highlight class="stringliteral">&quot;Blink&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Noguc/Documents/Team2-4C/Assets/player/VRM/Tests/VRMBlendShapeKeyTest.cs"/>
  </compounddef>
</doxygen>
